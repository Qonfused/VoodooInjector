name: XCode Build
on:
  # Skips build process for changes to only **docs** or **.github** directories.
  push:
    branches:
      - 'main'
    paths:
      - '!.github/**'
      - '!README.md'
      - '!.gitattributes'
      - '!.gitignore'
      - 'VoodooInjector'
      - 'VoodooInjector.xcodeproj'
  # Enables trigger for pull requests when making changes to xcode project files.
  pull_request:
    branches:
      - 'main'
      - 'development'
    paths:
      - 'VoodooInjector'
      - 'VoodooInjector.xcodeproj'
  workflow_dispatch:
# Cancel concurrent builds within the same PR.
#
# Push events made within the execution window of a prior commit's build will be
# interpreted as hot-patches, and will cancel the previous build. This will
# update the pull request's status check for this workflow to instead pull from
# the new commit's changes instead.
#
# Refer to the GitHub docs page for more information on this topic:
# * https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Run XCode Build
    timeout-minutes: 1
    runs-on: macos-latest
    steps:
      # Fetches remote repository without --progress option.
      #
      # The default behavior of @actions/checkout outputs many noisy lines of
      # status output in the workflow log, which is problematic for log size.
      #
      # Refer to the below PR for updates on this issue:
      # - https://github.com/actions/checkout/pull/1067
      - name: Checkout latest repository commit
        # uses: actions/checkout@v3
        uses: simonbaird/checkout@no-progress-option
        with:
          show-progress: false
      # - name: Debug Build
      #   run: |
      #     xcodebuild -configuration Debug | xcpretty && exit ${PIPESTATUS[0]}
      - name: Release Build
        run: |
          xcodebuild -configuration Release | xcpretty && exit ${PIPESTATUS[0]}
      - name: Prepare Artifacts
        shell: bash
        run: |
          while read -r path; do
            cfg=$(basename ${path%/*})
            bin=$(basename $path .kext)
            cd build/$cfg && zip -r -X ../$bin-$cfg.zip $bin.kext
          done <<< "$(find build/*/*.kext -maxdepth 0 -type d)"
      - name: Upload to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: build/*.zip
          if-no-files-found: error